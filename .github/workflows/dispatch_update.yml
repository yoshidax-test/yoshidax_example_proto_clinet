name: Dispatch Update

on:
  repository_dispatch:
    types: [update-printing-proto]
  workflow_dispatch:
    inputs:
      reason:
        description: Reason for executing manually
        required: true
        type: string
jobs:
  print_proto_files:
    runs-on: ubuntu-latest

    steps:
    # - name: Fail if branch is not master
    #   if: github.ref != 'refs/heads/master'
    #   run: |
    #     echo "This workflow must not be triggered with workflow_dispatch on a branch other than master"
    #     exit 1

    # - name: Echo event type
    #   run: echo ${{ github.event_name }}

    # - name: Validate branch
    #   if: github.event_name == 'workflow_dispatch'
    #   run: |
    #     echo "*** Current branch: ${{ github.ref }}"
    #     if [ "${{ github.ref }}" != "refs/heads/master" ]; then
    #       echo "Error: This workflow must be run from the master branch"
    #       echo "Current branch: ${{ github.ref }}"
    #       exit 1
    #     fi
    #     echo "*** Branch is valid"

    # - name: Record manual execution reason
    #   if: github.event_name == 'workflow_dispatch'
    #   run: |
    #     echo "Manual execution reason: ${{ inputs.reason }}"

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Git user
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Remove existing yoshidax_example_proto directory
      run: |
        rm -rf yoshidax_example_proto

    - name: Clone yoshidax_example_proto repository
      env:
        PRIVATE_GH_PAT: ${{ secrets.PRIVATE_GH_PAT }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git fetch origin
        git pull origin master
        git clone https://yoshidax:${{ secrets.PRIVATE_GH_PAT }}@github.com/yoshidax-test/yoshidax_example_proto.git
        cd yoshidax_example_proto
        git checkout master
        git pull origin master
        rm -rf .git
        cd ..
        git add .
        # 変更があるかどうかをチェック
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        else
          git commit -m "Update proto files"
          git push https://x-access-token:${{ secrets.PRIVATE_GH_PAT }}@github.com/yoshidax-test/yoshidax_example_proto.git HEAD:master
        fi